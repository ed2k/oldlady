#!/usr/bin/python

import sys

sys.path.append('../ddsprogs')

from deal import Deal
import time
import dds
start = time.time()

STR2RANK = {'A':14,'K':13,'Q':12,'J':11,'T':10,'9':9,'8':8,'7':7,'6':6,'5':5,'4':4,'3':3,'2':2}
h = [x for x in 'KQJ763.95.AT92.3 T85.K843.7543.82 A942.AQT7.J.AK96 .J62.KQ86.QJT754'.split()]

cards = sys.argv[6]
tricks = [[0,0,0], [0,0,0]]
if len(sys.argv) > 7:
    t = sys.argv[7].split(':')
    if t[0].find('.') > 0:
      suits = [int(x) for x in t[0].split('.')]
      ranks = [int(x) for x in t[1].split('.')]
      rem_zeros = [0]*(3-len(suits))
      tricks = [suits+rem_zeros, ranks+rem_zeros]
    else:
      tricks = [[int(t[0]), 0, 0], [int(t[1]), 0, 0]]
print cards, tricks

h = [x for x in cards.split(':')]

predeal = {}

for seat in xrange(4):
    one_seat = h[seat].split('.')
    predeal[seat] = []
    for suit in xrange(4):
        one_suit = [suit*13+STR2RANK[c]-2 for c in one_seat[suit]]
        for card in one_suit:
            predeal[seat].append(card)

#print(predeal)
deal1 = Deal.prepare(predeal)

strain = int(sys.argv[4])
leader = int(sys.argv[5])
target = -1
sol = 2
mode = 1
r = dds._solve_board(deal1, strain, leader, target, sol, mode, tricks)
print 'result: %d %d %d' % (r.suit[0], r.rank[0], r.score[0])

"""
 4:trump 5:first 6:cards[52+3+4*3+2] 7:currentTricks[3]
['S', "N:QJ6.K652.J85.T98 873.J97.AT764.Q4 K5.T83.KQ9.A7652 AT942.AQ4.32.KJ3", 'xxxxxx']);
$ ddsprogs/dds a a a 3 0 QJ6.K652.J85.98:873.J97.AT764.4:K5.T83.KQ9.7652:AT942.AQ4.32.KJ3 3.3.3:10.12.14
Calculating IMP_TABLE
IMP_TABLE CALCULATION COMPLETED
QJ6.K652.J85.98:873.J97.AT764.4:K5.T83.KQ9.7652:AT942.AQ4.32.KJ3 [[3, 3, 3], [10, 12, 14]]
[[3, 3, 3], [10, 12, 14]]
[[3, 3, 3], [10, 12, 14]]
3 10
result: 3 3 5

"""